{"version":3,"sources":["webpack:///./src/components/rule-header.js","webpack:///./src/templates/implementer.js","webpack:///./src/components/list-with-heading.js","webpack:///./src/components/table-testcase-findings.js","webpack:///./src/components/list-of-implementations.js","webpack:///./src/components/badge.js","webpack:///./src/components/count-implementations.js","webpack:///./src/components/rule-card.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/fuzzy-search/src/Helper.js","webpack:///./node_modules/fuzzy-search/src/FuzzySearch.js","webpack:///./node_modules/react-use/esm/useDebounce.js","webpack:///./node_modules/react-use/esm/useTimeoutFn.js","webpack:///./src/components/rules-filter.js","webpack:///./src/pages/rules.js"],"names":["RuleHeader","ruleId","ruleName","children","converter","showdown","Converter","className","to","id","dangerouslySetInnerHTML","__html","makeHtml","Implementer","location","data","implementerData","sitePage","context","JSON","parse","organisation","toolName","actMapping","description","title","completeMaps","filterByConsistency","incompleteMaps","length","allRules","edges","map","node","frontmatter","name","rule_type","impl","find","isIncomplete","key","data-rule-id","value","consistency","mapping","showIncomplete","body","query","items","values","filter","includes","ListWithHeading","cls","headingTemplate","itemTemplate","item","defaultProps","heading","TableTestcaseFindings","implementations","defaultFilter","index","implementationId","Object","result","findings","url","testcase","expected","actual","actuals","relativeUrl","getHyphenatedString","groupFindingsOfImplementations","ListOfImplementations","getPageContent","Badge","CountImplementations","count","implementationMetrics","metric","RuleCard","accessibilityRequirements","inputRules","accessibility_requirements","type","inputRuleId","atomicRule","rule","aHref","fields","slug","replace","href","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","prototype","Helper","this","object","path","firstSegment","remaining","dotIndex","list","arguments","undefined","indexOf","slice","toString","call","getDescendantProperty","push","FuzzySearch","haystack","keys","options","Array","isArray","assign","caseSensitive","sort","results","score","isMatch","y","propertyValues","found","z","_score","a","b","String","toLocaleLowerCase","indexes","nearestIndexesFor","letters","split","indexesOfFirstLetter","forEach","startingIndex","loopingIndex","letter","letterIndexes","match","useDebounce","fn","ms","deps","_a","ready","timeout","callback","isReady","current","set","clearTimeout","setTimeout","clear","useTimeoutFn","cancel","reset","RulesFilter","onFilter","minimumFilterTextLength","debounceTime","useState","filterText","setFilterText","onSubmit","e","preventDefault","htmlFor","placeholder","onChange","rules","isSmallViewport","setIsSmallViewport","renderedRules","setRenderedRules","queries","small","matches","classnames","sm","search","nameOfA","toLowerCase","nameOfB","localeCompare","fastmatterAttributes","input_rules"],"mappings":"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","file":"component---src-pages-rules-js-c921b8f46a75696ee4c5.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport showdown from 'showdown'\n\nimport './rule-header.scss'\n\nconst RuleHeader = ({ ruleId, ruleName, children }) => {\n\tconst converter = new showdown.Converter()\n\n\treturn (\n\t\t<div className=\"ruleHeader\">\n\t\t\t<Link to={`/rules/${ruleId}`}>\n\t\t\t\t<h2 id={`id-${ruleId}`} dangerouslySetInnerHTML={{ __html: converter.makeHtml(ruleName) }}></h2>\n\t\t\t</Link>\n\t\t\t<div className=\"childContainer\">{children}</div>\n\t\t</div>\n\t)\n}\n\nRuleHeader.propTypes = {\n\truleId: PropTypes.string.isRequired,\n\truleName: PropTypes.string.isRequired,\n}\n\nexport default RuleHeader\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport ListOfImplementations from '../components/list-of-implementations'\nimport RuleHeader from '../components/rule-header'\nimport Badge from '../components/badge'\nimport Note from '../components/note'\n\nimport './implementer.scss'\n\nconst Implementer = ({ location, data }) => {\n\tconst { implementerData } = data.sitePage.context\n\tconst { organisation, toolName, actMapping, description } = JSON.parse(implementerData)\n\n\tconst title = `Implementation report of ${toolName} (${organisation})`\n\tconst completeMaps = filterByConsistency(actMapping, ['consistent', 'partially-consistent'])\n\tconst incompleteMaps = filterByConsistency(actMapping, ['inconsistent'])\n\n\tif (!completeMaps || !completeMaps.length) {\n\t\treturn (\n\t\t\t<Layout location={location}>\n\t\t\t\t<SEO title={title} />\n\t\t\t\t<section className=\"page-implementer\">\n\t\t\t\t\t<h1>{title}</h1>\n\t\t\t\t\t<Note\n\t\t\t\t\t\ttitle={`Insufficient implementation data`}\n\t\t\t\t\t\tbody={`There are no known implementations. This is likely because the rule has been updated and the implementation report has not yet been updated.`}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\t\t\t</Layout>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Layout location={location}>\n\t\t\t<SEO title={title} />\n\t\t\t<section className=\"page-implementer\">\n\t\t\t\t{/* title  */}\n\t\t\t\t<h1>{title}</h1>\n\t\t\t\t{/* desc  */}\n\t\t\t\t{description && <p>{description}</p>}\n\t\t\t\t{/* impl  */}\n\t\t\t\t{data.allRules.edges.map(({ node }) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tfrontmatter: { id, name, rule_type },\n\t\t\t\t\t} = node\n\n\t\t\t\t\tconst impl = completeMaps.find(({ ruleId }) => ruleId === id)\n\t\t\t\t\tconst isIncomplete = incompleteMaps.find(({ ruleId }) => ruleId === id)\n\n\t\t\t\t\tif (!impl && isIncomplete) {\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!impl) {\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n\t\t\t\t\t * show complete implementation tabulation\n\t\t\t\t\t */\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"cardItem\" key={id} data-rule-id={id}>\n\t\t\t\t\t\t\t<RuleHeader ruleId={id} ruleName={name}>\n\t\t\t\t\t\t\t\t<Badge title={`Id:`} value={id} />\n\t\t\t\t\t\t\t\t<Badge title={`Type:`} value={rule_type} />\n\t\t\t\t\t\t\t\t<Badge title={`Consistency:`} value={impl.consistency} />\n\t\t\t\t\t\t\t</RuleHeader>\n\t\t\t\t\t\t\t<ListOfImplementations mapping={[impl]} showIncomplete={false} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport default Implementer\n\nexport const query = graphql`\n\tquery($path: String) {\n\t\tsitePage(path: { eq: $path }) {\n\t\t\tcontext {\n\t\t\t\tfilename\n\t\t\t\ttitle\n\t\t\t\timplementerData\n\t\t\t}\n\t\t}\n\t\tallRules: allMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___name], order: ASC }\n\t\t\tfilter: { fields: { markdownType: { eq: \"rules\" } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfields {\n\t\t\t\t\t\tfileName {\n\t\t\t\t\t\t\trelativePath\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\tslug\n\t\t\t\t\t\tfastmatterAttributes\n\t\t\t\t\t}\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t\trule_type\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n\n/**\n * Filter a given set of implementations based on consistency\n * @param {Array<Object>} items array of implementations\n * @param {Array<String>} values allowed values\n * @returns {Array<Object>}\n */\nexport function filterByConsistency(items, values) {\n\treturn items.filter(({ consistency }) => {\n\t\treturn values.includes(consistency)\n\t})\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ListWithHeading = ({ cls, headingTemplate, itemTemplate, items = [] }) => {\n\treturn (\n\t\t<div className={cls}>\n\t\t\t{/* title  */}\n\t\t\t{headingTemplate()}\n\t\t\t{/* when there are no items, show a no data note  */}\n\t\t\t{(!items || !items.length) && <div className=\"note\">No Data</div>}\n\t\t\t{/* render items if they exist  */}\n\t\t\t{items.length > 0 && <ul>{items.map(item => itemTemplate(item))}</ul>}\n\t\t</div>\n\t)\n}\n\nListWithHeading.propTypes = {\n\tcls: PropTypes.string,\n\theadingTemplate: PropTypes.func.isRequired,\n\titemTemplate: PropTypes.func.isRequired,\n\titems: PropTypes.array,\n}\n\nListWithHeading.defaultProps = {\n\tcls: ``,\n\theading: ``,\n\titems: [],\n}\n\nexport default ListWithHeading\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport getHyphenatedString from '../../utils/get-hyphenated-string'\n\nconst TableTestcaseFindings = ({ ruleId, implementations = [], filter = defaultFilter }) => {\n\treturn (\n\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Testcase Url</th>\n\t\t\t\t\t<th>Expected</th>\n\t\t\t\t\t{implementations.map(({ implementationId }, index) => {\n\t\t\t\t\t\treturn <th key={`${implementationId}- ${index}`}>{implementationId}</th>\n\t\t\t\t\t})}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{Object.values(groupFindingsOfImplementations(ruleId, implementations, filter)).map(\n\t\t\t\t\t({ testcase, url, relativeUrl, expected, actuals }, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr key={`${url}-${index}`}>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Link to={relativeUrl}>{testcase}</Link>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{expected}</td>\n\t\t\t\t\t\t\t\t{implementations.map(({ implementationId }, index) => {\n\t\t\t\t\t\t\t\t\treturn <td key={`${implementationId}-${url}=${index}`}>{actuals[implementationId]}</td>\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nTableTestcaseFindings.propTypes = {\n\truleId: PropTypes.string.isRequired,\n\timplementations: PropTypes.array.isRequired,\n\tfilter: PropTypes.func,\n}\n\nexport default TableTestcaseFindings\n\n/**\n * Group implmentation set data per testcase\n * @param {Array<Object>} implementations implementation set\n * @param {Function} filter filter fn\n * @returns {Object}\n */\nfunction groupFindingsOfImplementations(ruleId, implementations, filter) {\n\tconst result = {}\n\n\tconst filteredImplementations = implementations.filter(filter)\n\n\tfor (const { implementationId, findings } of filteredImplementations) {\n\t\tfor (const { url, testcase, expected, actual } of findings) {\n\t\t\tif (!result[testcase]) {\n\t\t\t\tresult[testcase] = {\n\t\t\t\t\turl,\n\t\t\t\t\ttestcase,\n\t\t\t\t\trelativeUrl: `/rules/${ruleId}/#${getHyphenatedString(testcase)}`,\n\t\t\t\t\texpected,\n\t\t\t\t\tactuals: {\n\t\t\t\t\t\t[implementationId]: actual,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult[testcase] = {\n\t\t\t\t\t...result[testcase],\n\t\t\t\t\tactuals: {\n\t\t\t\t\t\t...result[testcase].actuals,\n\t\t\t\t\t\t[implementationId]: actual,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result\n}\n\n/**\n * Default filter which returns everything\n */\nfunction defaultFilter() {\n\treturn true\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TableTestcaseFindings from './table-testcase-findings'\nimport Note from './note'\n\nconst ListOfImplementations = ({ mapping = [], showIncomplete = false }) => {\n\treturn (\n\t\t<div>\n\t\t\t{mapping.map(({ ruleId = '', implementations }) => (\n\t\t\t\t<div key={ruleId}>{getPageContent(implementations, showIncomplete, ruleId)}</div>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nListOfImplementations.propTypes = {\n\tmapping: PropTypes.array.isRequired,\n\tshowIncomplete: PropTypes.bool,\n}\n\nexport default ListOfImplementations\n\n/**\n *\n * @param {Object[]} implementations implementations\n * @param {Boolean} showIncomplete should show incomplete implementations\n * @param {String} ruleId rule id\n */\nfunction getPageContent(implementations, showIncomplete, ruleId) {\n\tif (!implementations || !implementations.length) {\n\t\treturn (\n\t\t\t<Note\n\t\t\t\tcls={`invalid`}\n\t\t\t\ttitle={`No Implementations`}\n\t\t\t\tbody={`No complete implemenations are provided. Kindly submit a new or amended implementation report.`}\n\t\t\t/>\n\t\t)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{showIncomplete ? (\n\t\t\t\t<>\n\t\t\t\t\t<Note\n\t\t\t\t\t\tcls={`invalid`}\n\t\t\t\t\t\ttitle={`Incomplete Implementation`}\n\t\t\t\t\t\tbody={`Listed below are the incomplete assertions. Kindly submit an amended implementation report.`}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableTestcaseFindings\n\t\t\t\t\t\truleId={ruleId}\n\t\t\t\t\t\timplementations={implementations}\n\t\t\t\t\t\tfilter={({ consistency }) => consistency === `inconsistent`}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<TableTestcaseFindings\n\t\t\t\t\truleId={ruleId}\n\t\t\t\t\timplementations={implementations}\n\t\t\t\t\tfilter={({ consistency }) => consistency !== `inconsistent`}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './badge.scss'\n\nconst Badge = ({ title, value }) => {\n  return (\n    <div className='badge'>\n      <span className='title'>{title}</span>\n      <span>{value}</span>\n    </div>\n  )\n}\n\nBadge.propTypes = {\n  title: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired\n}\n\nexport default Badge","import React from 'react'\nimport { filterByConsistency } from '../templates/implementer.js'\nimport implementationMetrics from '../../_data/implementation-metrics.json'\n\nconst CountImplementations = ({ ruleId = `` }) => {\n\tconst metrics = implementationMetrics[ruleId] || []\n\n\t/**\n\t * Get count of implementations which are only `consistent`\n\t */\n\tconst count = metrics.filter(metric => filterByConsistency(metric.implementations, ['consistent']).length > 0).length\n\n\treturn (\n\t\t<div className=\"side-notes\">\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Complete Implementations: {count}</span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default CountImplementations\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport showdown from 'showdown'\n\nimport AccessibilityRequirements from './accessibility_requirements'\nimport CountImplementations from './count-implementations'\nimport ListWithHeading from './list-with-heading'\n\nimport './rule-card.scss'\nimport RuleHeader from './rule-header'\n\nconst RuleCard = ({ id = '', name = '', description = '', accessibilityRequirements, inputRules, allRules }) => {\n\tconst converter = new showdown.Converter()\n\n\treturn (\n\t\t<article className=\"ruleCard\">\n\t\t\t<section>\n\t\t\t\t{/* header  */}\n\t\t\t\t<RuleHeader ruleId={id} ruleName={name} />\n\t\t\t\t{/* rule description */}\n\t\t\t\t<div\n\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t__html: converter.makeHtml(description),\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t{/* rule sc's */}\n\t\t\t\t<AccessibilityRequirements accessibility_requirements={accessibilityRequirements} type=\"text\" />\n\t\t\t\t{/* input rules */}\n\t\t\t\t{inputRules && (\n\t\t\t\t\t<ListWithHeading\n\t\t\t\t\t\tcls={`meta`}\n\t\t\t\t\t\theadingTemplate={() => <span className=\"heading\">Input Rules:</span>}\n\t\t\t\t\t\titemTemplate={inputRuleId => {\n\t\t\t\t\t\t\tconst atomicRule = allRules.edges.find(rule => rule.node.frontmatter.id === inputRuleId)\n\t\t\t\t\t\t\tconst aHref = atomicRule.node.fields.slug.replace('rules/', '')\n\t\t\t\t\t\t\tconst name = atomicRule.node.frontmatter.name\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li key={inputRuleId}>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tclassName=\"sc-item block\"\n\t\t\t\t\t\t\t\t\t\thref={aHref}\n\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t__html: converter.makeHtml(name),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t></a>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\titems={inputRules}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{/* implementation count */}\n\t\t\t\t<CountImplementations ruleId={id} />\n\t\t\t</section>\n\t\t</article>\n\t)\n}\n\nRuleCard.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\ttype: PropTypes.string.isRequired,\n\tdescription: PropTypes.string.isRequired,\n\taccessibilityRequirements: PropTypes.object,\n\tinputRules: PropTypes.array,\n\tallRules: PropTypes.object,\n}\n\nexport default RuleCard\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import _classCallCheck from \"/home/runner/work/act-rules-web/act-rules-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/runner/work/act-rules-web/act-rules-web/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Helper = /*#__PURE__*/function () {\n  function Helper() {\n    _classCallCheck(this, Helper);\n  }\n\n  _createClass(Helper, null, [{\n    key: \"getDescendantProperty\",\n    value: function getDescendantProperty(object, path) {\n      var list = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var firstSegment;\n      var remaining;\n      var dotIndex;\n      var value;\n      var index;\n      var length;\n\n      if (path) {\n        dotIndex = path.indexOf('.');\n\n        if (dotIndex === -1) {\n          firstSegment = path;\n        } else {\n          firstSegment = path.slice(0, dotIndex);\n          remaining = path.slice(dotIndex + 1);\n        }\n\n        value = object[firstSegment];\n\n        if (value !== null && typeof value !== 'undefined') {\n          if (!remaining && (typeof value === 'string' || typeof value === 'number')) {\n            list.push(value);\n          } else if (Object.prototype.toString.call(value) === '[object Array]') {\n            for (index = 0, length = value.length; index < length; index++) {\n              Helper.getDescendantProperty(value[index], remaining, list);\n            }\n          } else if (remaining) {\n            Helper.getDescendantProperty(value, remaining, list);\n          }\n        }\n      } else {\n        list.push(object);\n      }\n\n      return list;\n    }\n  }]);\n\n  return Helper;\n}();\n\nexport { Helper as default };","import _classCallCheck from \"/home/runner/work/act-rules-web/act-rules-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/runner/work/act-rules-web/act-rules-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Helper from './Helper';\n\nvar FuzzySearch = /*#__PURE__*/function () {\n  function FuzzySearch() {\n    var haystack = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, FuzzySearch);\n\n    if (!Array.isArray(keys)) {\n      options = keys;\n      keys = [];\n    }\n\n    this.haystack = haystack;\n    this.keys = keys;\n    this.options = Object.assign({\n      caseSensitive: false,\n      sort: false\n    }, options);\n  }\n\n  _createClass(FuzzySearch, [{\n    key: \"search\",\n    value: function search() {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      if (query === '') {\n        return this.haystack;\n      }\n\n      var results = [];\n\n      for (var i = 0; i < this.haystack.length; i++) {\n        var item = this.haystack[i];\n\n        if (this.keys.length === 0) {\n          var score = FuzzySearch.isMatch(item, query, this.options.caseSensitive);\n\n          if (score) {\n            results.push({\n              item: item,\n              score: score\n            });\n          }\n        } else {\n          for (var y = 0; y < this.keys.length; y++) {\n            var propertyValues = Helper.getDescendantProperty(item, this.keys[y]);\n            var found = false;\n\n            for (var z = 0; z < propertyValues.length; z++) {\n              var _score = FuzzySearch.isMatch(propertyValues[z], query, this.options.caseSensitive);\n\n              if (_score) {\n                found = true;\n                results.push({\n                  item: item,\n                  score: _score\n                });\n                break;\n              }\n            }\n\n            if (found) {\n              break;\n            }\n          }\n        }\n      }\n\n      if (this.options.sort) {\n        results.sort(function (a, b) {\n          return a.score - b.score;\n        });\n      }\n\n      return results.map(function (result) {\n        return result.item;\n      });\n    }\n  }], [{\n    key: \"isMatch\",\n    value: function isMatch(item, query, caseSensitive) {\n      item = String(item);\n      query = String(query);\n\n      if (!caseSensitive) {\n        item = item.toLocaleLowerCase();\n        query = query.toLocaleLowerCase();\n      }\n\n      var indexes = FuzzySearch.nearestIndexesFor(item, query);\n\n      if (!indexes) {\n        return false;\n      } // Exact matches should be first.\n\n\n      if (item === query) {\n        return 1;\n      } // If we have more than 2 letters, matches close to each other should be first.\n\n\n      if (indexes.length > 1) {\n        return 2 + (indexes[indexes.length - 1] - indexes[0]);\n      } // Matches closest to the start of the string should be first.\n\n\n      return 2 + indexes[0];\n    }\n  }, {\n    key: \"nearestIndexesFor\",\n    value: function nearestIndexesFor(item, query) {\n      var letters = query.split('');\n      var indexes = [];\n      var indexesOfFirstLetter = FuzzySearch.indexesOfFirstLetter(item, query);\n      indexesOfFirstLetter.forEach(function (startingIndex, loopingIndex) {\n        var index = startingIndex + 1;\n        indexes[loopingIndex] = [startingIndex];\n\n        for (var i = 1; i < letters.length; i++) {\n          var letter = letters[i];\n          index = item.indexOf(letter, index);\n\n          if (index === -1) {\n            indexes[loopingIndex] = false;\n            break;\n          }\n\n          indexes[loopingIndex].push(index);\n          index++;\n        }\n      });\n      indexes = indexes.filter(function (letterIndexes) {\n        return letterIndexes !== false;\n      });\n\n      if (!indexes.length) {\n        return false;\n      }\n\n      return indexes.sort(function (a, b) {\n        if (a.length === 1) {\n          return a[0] - b[0];\n        }\n\n        a = a[a.length - 1] - a[0];\n        b = b[b.length - 1] - b[0];\n        return a - b;\n      })[0];\n    }\n  }, {\n    key: \"indexesOfFirstLetter\",\n    value: function indexesOfFirstLetter(item, query) {\n      var match = query[0];\n      return item.split('').map(function (letter, index) {\n        if (letter !== match) {\n          return false;\n        }\n\n        return index;\n      }).filter(function (index) {\n        return index !== false;\n      });\n    }\n  }]);\n\n  return FuzzySearch;\n}();\n\nexport { FuzzySearch as default };","import { useEffect } from 'react';\nimport useTimeoutFn from './useTimeoutFn';\nexport default function useDebounce(fn, ms, deps) {\n  if (ms === void 0) {\n    ms = 0;\n  }\n\n  if (deps === void 0) {\n    deps = [];\n  }\n\n  var _a = useTimeoutFn(fn, ms),\n      isReady = _a[0],\n      cancel = _a[1],\n      reset = _a[2];\n\n  useEffect(reset, deps);\n  return [isReady, cancel];\n}","/* eslint-disable */\nimport { useCallback, useEffect, useRef } from 'react';\nexport default function useTimeoutFn(fn, ms) {\n  if (ms === void 0) {\n    ms = 0;\n  }\n\n  var ready = useRef(false);\n  var timeout = useRef();\n  var callback = useRef(fn);\n  var isReady = useCallback(function () {\n    return ready.current;\n  }, []);\n  var set = useCallback(function () {\n    ready.current = false;\n    timeout.current && clearTimeout(timeout.current);\n    timeout.current = setTimeout(function () {\n      ready.current = true;\n      callback.current();\n    }, ms);\n  }, [ms]);\n  var clear = useCallback(function () {\n    ready.current = null;\n    timeout.current && clearTimeout(timeout.current);\n  }, []); // update ref when function changes\n\n  useEffect(function () {\n    callback.current = fn;\n  }, [fn]); // set on mount, clear on unmount\n\n  useEffect(function () {\n    set();\n    return clear;\n  }, [ms]);\n  return [isReady, clear, set];\n}","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDebounce } from 'react-use'\n\nimport './rules-filter.scss'\n\nconst RulesFilter = ({ onFilter, minimumFilterTextLength = 3, debounceTime = 300 }) => {\n\tconst [filterText, setFilterText] = useState(``)\n\n\tuseDebounce(() => onFilter(filterText), debounceTime, [filterText])\n\n\treturn (\n\t\t<form onSubmit={e => e.preventDefault()} className=\"rulesFilter\">\n\t\t\t<div className=\"filterTextInputGroup\">\n\t\t\t\t<label htmlFor=\"filterTextInput\">Filter:</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"filterTextInput\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder={`Enter more than ${minimumFilterTextLength} characters...`}\n\t\t\t\t\tvalue={filterText}\n\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\tsetFilterText(e.target.value)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<small>Supports id, name, description or type</small>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nRulesFilter.propTypes = {\n\tdebounceTime: PropTypes.number,\n\tonFilter: PropTypes.func.isRequired,\n\tminimumFilterTextLength: PropTypes.number,\n}\n\nexport default RulesFilter\n","import React, { useState } from 'react'\nimport { graphql } from 'gatsby'\nimport classnames from 'classnames'\nimport ReactMedia from 'react-media'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport RuleCard from '../components/rule-card'\nimport FuzzySearch from 'fuzzy-search'\nimport RulesFilter from '../components/rules-filter'\n\nimport './rules.scss'\n\nexport default ({ location, data }) => {\n\tconst { rules, allRules } = data\n\n\tconst [isSmallViewport, setIsSmallViewport] = useState(false)\n\tconst [renderedRules, setRenderedRules] = useState(rules.edges)\n\n\tconst minimumFilterTextLength = 3\n\tconst onFilter = value => {\n\t\tif (value.length < minimumFilterTextLength) {\n\t\t\tsetRenderedRules(rules.edges)\n\t\t\treturn\n\t\t}\n\t\tconst fuzzy = new FuzzySearch(rules.edges, [\n\t\t\t'node.frontmatter.id',\n\t\t\t'node.frontmatter.name',\n\t\t\t'node.frontmatter.description',\n\t\t\t'node.frontmatter.rule_type',\n\t\t])\n\t\tconst results = fuzzy.search(value)\n\t\tsetRenderedRules(results)\n\t}\n\n\treturn (\n\t\t<Layout location={location}>\n\t\t\t<ReactMedia queries={{ small: '(max-width: 599px)' }} onChange={matches => setIsSmallViewport(matches.small)} />\n\t\t\t<SEO title=\"Rules\" />\n\t\t\t<section className={classnames(`page-rules`, { sm: isSmallViewport })}>\n\t\t\t\t{/* title and filter  */}\n\t\t\t\t<header className=\"titleAndFilter\">\n\t\t\t\t\t<h1>Rules</h1>\n\t\t\t\t\t{/* filter input  */}\n\t\t\t\t\t<RulesFilter onFilter={onFilter} minimumFilterTextLength={minimumFilterTextLength} />\n\t\t\t\t</header>\n\t\t\t\t{/* Rules list */}\n\t\t\t\t<section className=\"content\">\n\t\t\t\t\t{renderedRules\n\t\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Remove markdown backticks for sort comparison\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tconst nameOfA = a.node.frontmatter.name.replace(/`/g, '').toLowerCase()\n\t\t\t\t\t\t\tconst nameOfB = b.node.frontmatter.name.replace(/`/g, '').toLowerCase()\n\t\t\t\t\t\t\t// Reference - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\n\t\t\t\t\t\t\treturn nameOfA.localeCompare(nameOfB)\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.map(({ node }) => {\n\t\t\t\t\t\t\tconst { frontmatter, fields } = node\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<RuleCard\n\t\t\t\t\t\t\t\t\tkey={frontmatter.id}\n\t\t\t\t\t\t\t\t\tid={frontmatter.id}\n\t\t\t\t\t\t\t\t\tname={frontmatter.name}\n\t\t\t\t\t\t\t\t\ttype={frontmatter.rule_type}\n\t\t\t\t\t\t\t\t\tdescription={frontmatter.description}\n\t\t\t\t\t\t\t\t\taccessibilityRequirements={JSON.parse(fields.fastmatterAttributes).accessibility_requirements}\n\t\t\t\t\t\t\t\t\tinputRules={frontmatter.input_rules}\n\t\t\t\t\t\t\t\t\tallRules={allRules}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t</section>\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery {\n\t\trules: allMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___name], order: ASC }\n\t\t\tfilter: { fields: { markdownType: { eq: \"rules\" } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfileAbsolutePath\n\t\t\t\t\tid\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\trule_type\n\t\t\t\t\t\tinput_rules\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\tfastmatterAttributes\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tallRules: allMarkdownRemark(filter: { fields: { markdownType: { eq: \"rules\" } } }) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfields {\n\t\t\t\t\t\tfileName {\n\t\t\t\t\t\t\trelativePath\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}