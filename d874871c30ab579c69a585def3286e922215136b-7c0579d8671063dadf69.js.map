{"version":3,"sources":["webpack:///./src/rule/get-wcag-criterion.js","webpack:///./src/components/accessibility_requirements/outcome-mapping.js","webpack:///./src/components/accessibility_requirements/accessibility-requirement.js","webpack:///./src/components/accessibility_requirements/index.js","webpack:///./src/rule/get-accessibility-requirement.js","webpack:///./src/components/note.js","webpack:///./utils/get-hyphenated-string.js","webpack:///./src/rule/get-wcag-technique.js"],"names":["scUrls","require","getConformanceLevel","wcagVersion","level","conformanceLevel","module","exports","getWcagCriterion","scNumber","requirementType","title","url","fallbackCriterion","num","handle","wcagType","shortTitle","OutcomeMapping","failed","passed","inapplicable","FailedItem","outcome","PassedItem","InapplicableItem","getMappingOutcomeSentence","outcomeMap","satisfied","outcomeValue","AccessibilityRequirementsListing","listType","mapping","ExternalLink","href","text","ConformanceRequirement","className","target","rel","AccessibilityRequirements","accessibility_requirements","type","accRequirements","accMapping","Object","entries","length","map","index","requirementId","Requirement","key","accRequirementItems","accRequirement","getAccessibilityRequirement","getWcagTechnique","accessibilityDocs","aria11","baseURL","toLowerCase","split","accDocument","substr","includes","Note","cls","body","classnames","givenString","lowercase","result","join","techniquesTitles","technologyMap","aria","c","f","flash","g","h","pdf","scr","sl","sm","svr","t","getTechniqueUrl","techniqueId","baseUrl","prefix","toUpperCase","replace","techniqueType","tecuniqueId"],"mappings":"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","file":"d874871c30ab579c69a585def3286e922215136b-7c0579d8671063dadf69.js","sourcesContent":["const scUrls = require('../../_data/sc-urls.json')\n\nconst requirementType = 'success criterion'\nconst latestWcagVersion = '2.1'\nconst highestLevel = 'AAA'\n\n// For WCAG SC. Title, URL and more is grabbed from data fetched during build.\nfunction getWcagCriterion(scNumber) {\n\tif (!scUrls[scNumber]) {\n\t\treturn fallbackCriterion(scNumber)\n\t}\n\n\tconst { num, url, handle, wcagType, level } = scUrls[scNumber]\n\treturn {\n\t\trequirementType,\n\t\tconformanceLevel: getConformanceLevel(wcagType, level),\n\t\ttitle: `${num} ${handle} (Level ${level})`,\n\t\tshortTitle: `${num} ${handle}`,\n\t\turl,\n\t}\n}\n\nfunction getConformanceLevel(wcagVersion, level) {\n\tlet conformanceLevel = `WCAG ${wcagVersion}`\n\tif (wcagVersion !== latestWcagVersion) {\n\t\tconformanceLevel += ' and later'\n\t}\n\tconformanceLevel += ` on level ${level}`\n\tif (level !== highestLevel) {\n\t\tconformanceLevel += ' and higher'\n\t}\n\treturn conformanceLevel\n}\n\nfunction fallbackCriterion(scNumber) {\n\treturn {\n\t\trequirementType,\n\t\ttitle: `${scNumber} Unknown success criterion`,\n\t\turl: 'https://www.w3.org/TR/WCAG21/',\n\t}\n}\n\nmodule.exports = { getWcagCriterion }\n","import React from 'react'\n\nexport default function OutcomeMapping({\n\tfailed = 'not satisfied',\n\tpassed = 'further testing is needed',\n\tinapplicable = 'further testing is needed',\n\trequirementType = 'success criterion',\n}) {\n\treturn (\n\t\t<ul>\n\t\t\t<FailedItem requirementType={requirementType} outcome={failed} />\n\t\t\t<PassedItem requirementType={requirementType} outcome={passed} />\n\t\t\t<InapplicableItem requirementType={requirementType} outcome={inapplicable} />\n\t\t</ul>\n\t)\n}\n\nfunction FailedItem({ requirementType, outcome }) {\n\treturn (\n\t\t<li>\n\t\t\tAny <code>failed</code> outcomes: {getMappingOutcomeSentence(requirementType, outcome)}.\n\t\t</li>\n\t)\n}\n\nfunction PassedItem({ requirementType, outcome }) {\n\treturn (\n\t\t<li>\n\t\t\tAll <code>passed</code> outcomes: {getMappingOutcomeSentence(requirementType, outcome)}.\n\t\t</li>\n\t)\n}\n\nfunction InapplicableItem({ requirementType, outcome }) {\n\treturn (\n\t\t<li>\n\t\t\tAn <code>inapplicable</code> outcome: {getMappingOutcomeSentence(requirementType, outcome)}.\n\t\t</li>\n\t)\n}\n\n/**\n * Conjugate outcome mapping\n * @param {String} requirementType requirement type eg: technique, requirement, success criterion\n * @param {String} outcome given string from accessibility requirement authored in frontmatte of the rule\n * @returns {String}\n */\nconst getMappingOutcomeSentence = (requirementType, outcome) => {\n\tconst outcomeMap = {\n\t\tsatisfied: 'is satisfied',\n\t\t'not satisfied': 'is not satisfied',\n\t\t'further testing needed': 'needs further testing',\n\t}\n\n\tlet outcomeValue = ``\n\tif (outcomeMap[outcome]) {\n\t\toutcomeValue = outcomeMap[outcome]\n\t}\n\n\treturn `${requirementType} ${outcomeValue}`\n}\n","import React from 'react'\nimport OutcomeMapping from './outcome-mapping'\n\nexport default function AccessibilityRequirementsListing({\n\tlistType,\n\ttitle,\n\tshortTitle,\n\tconformanceLevel,\n\turl,\n\tmapping,\n\trequirementType,\n}) {\n\tif (listType === 'text') {\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<ExternalLink href={url} text={title} />\n\t\t\t</li>\n\t\t)\n\t}\n\n\treturn (\n\t\t<li>\n\t\t\t<details>\n\t\t\t\t<summary>{title}</summary>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<ExternalLink href={url} text={`Learn More about ${shortTitle}`} />\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<ConformanceRequirement conformanceLevel={conformanceLevel} />\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\tOutcome mapping:\n\t\t\t\t\t\t<OutcomeMapping\n\t\t\t\t\t\t\trequirementType={requirementType}\n\t\t\t\t\t\t\tfailed={mapping.failed}\n\t\t\t\t\t\t\tpassed={mapping.passed}\n\t\t\t\t\t\t\tinapplicable={mapping.inapplicable}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</details>\n\t\t</li>\n\t)\n}\n\nfunction ConformanceRequirement({ conformanceLevel }) {\n\treturn conformanceLevel ? (\n\t\t<>\n\t\t\t<strong>Required for conformance</strong> to {conformanceLevel}.\n\t\t</>\n\t) : (\n\t\t`Not required to conformance to any W3C accessibility recommendation.`\n\t)\n}\n\nfunction ExternalLink({ href, text }) {\n\treturn (\n\t\t<a href={href} className=\"sc-item\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t{text}\n\t\t</a>\n\t)\n}\n","import React from 'react'\nimport AccessibilityRequirement from './accessibility-requirement'\nimport { getAccessibilityRequirement } from '../../rule/get-accessibility-requirement'\n\nexport default function AccessibilityRequirements({ accessibility_requirements, type = 'details' }) {\n\treturn (\n\t\t<div className=\"meta\">\n\t\t\t<span className=\"heading\">Accessibility Requirements Mapping:</span>\n\t\t\t<ul>{accRequirementItems(accessibility_requirements, type)}</ul>\n\t\t</div>\n\t)\n}\n\nfunction accRequirementItems(accRequirements, listType) {\n\tconst accMapping = Object.entries(accRequirements || {})\n\tif (accMapping.length === 0) {\n\t\treturn <li>This rule is not required for conformance.</li>\n\t}\n\n\treturn accMapping.map(([requirementId, mapping], index) => {\n\t\treturn <Requirement requirementId={requirementId} mapping={mapping} listType={listType} key={index} />\n\t})\n}\n\nfunction Requirement({ requirementId, mapping, listType }) {\n\tconst accRequirement = getAccessibilityRequirement({\n\t\trequirementId,\n\t\ttitle: mapping.title,\n\t})\n\tif (!accRequirement) {\n\t\treturn <li>Accessibility Requirements have no or unknown mapping.</li>\n\t}\n\n\tconst { conformanceLevel, url, requirementType, title, shortTitle } = accRequirement\n\n\treturn (\n\t\t<AccessibilityRequirement\n\t\t\tmapping={mapping}\n\t\t\ttitle={title || mapping.title}\n\t\t\tshortTitle={shortTitle}\n\t\t\tlistType={listType}\n\t\t\tconformanceLevel={conformanceLevel}\n\t\t\turl={url}\n\t\t\trequirementType={requirementType}\n\t\t/>\n\t)\n}\n","const { getWcagCriterion } = require('./get-wcag-criterion')\nconst { getWcagTechnique } = require('./get-wcag-technique')\n\nconst accessibilityDocs = {\n\taria11: {\n\t\tconformanceLevel: 'WAI-ARIA 1.1 author requirements',\n\t\tbaseURL: 'https://www.w3.org/TR/wai-aria-1.1/#',\n\t\trequirementType: 'WAI-ARIA requirement',\n\t},\n\t'dpub-aria': {\n\t\tconformanceLevel: 'WAI-ARIA Digital Publishing Module 1.0 author requirements',\n\t\tbaseURL: 'https://www.w3.org/TR/dpub-aria-1.0/#',\n\t\trequirementType: 'WAI-ARIA Digital Publishing Module requirement',\n\t},\n\t'graphics-aria': {\n\t\tconformanceLevel: 'WAI-ARIA Graphics Module 1.0 author requirements',\n\t\tbaseURL: 'https://www.w3.org/TR/graphics-aria-1.0/#',\n\t\trequirementType: 'WAI-ARIA Graphics Module requirement',\n\t},\n\t'using-aria': {\n\t\tbaseURL: 'https://www.w3.org/TR/using-aria/#',\n\t\trequirementType: 'WAI-ARIA rule',\n\t},\n\t'wcag-text': {\n\t\tbaseURL: 'https://www.w3.org/TR/WCAG21/',\n\t\trequirementType: 'WCAG 2 conformance requirement',\n\t},\n}\n\nfunction getAccessibilityRequirement({ requirementId, title, shortTitle }) {\n\tshortTitle = shortTitle || title\n\tconst [accDocument, accRequirement] = requirementId.toLowerCase().split(':')\n\n\tif (accDocument.substr(0, 5) === 'wcag2') {\n\t\treturn getWcagCriterion(accRequirement)\n\t} else if (['technique', 'wcag-technique'].includes(accDocument)) {\n\t\treturn getWcagTechnique(accRequirement)\n\t} else if (accessibilityDocs[accDocument]) {\n\t\tconst { baseURL, conformanceLevel, requirementType } = accessibilityDocs[accDocument]\n\t\treturn {\n\t\t\trequirementType,\n\t\t\tconformanceLevel,\n\t\t\ttitle,\n\t\t\tshortTitle,\n\t\t\turl: `${baseURL}${accRequirement}`,\n\t\t}\n\t}\n}\n\nmodule.exports = { getAccessibilityRequirement }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nimport './note.scss'\n\nconst Note = ({ cls = '', title = '', body = '' }) => {\n\treturn (\n\t\t<div className={classnames('note', cls)}>\n\t\t\t<b>{title}</b>\n\t\t\t<p>{body}</p>\n\t\t</div>\n\t)\n}\n\nNote.propTypes = {\n\tcls: PropTypes.string,\n\ttitle: PropTypes.string.isRequired,\n\tbody: PropTypes.string.isRequired,\n}\n\nexport default Note\n","const getHyphenatedString = (givenString, lowercase = true) => {\n\tconst result = givenString.split(' ').join('-')\n\n\tif (!lowercase) {\n\t\treturn result\n\t}\n\n\treturn result.toLowerCase()\n}\n\nmodule.exports = getHyphenatedString\n","const techniquesTitles = require('../../_data/techniques-titles.json')\n\n// For WCAG techniques. Title is grabbed from data fetched during build. URL is handcrafted.\nfunction getWcagTechnique(tecuniqueId) {\n\tconst techniqueId = tecuniqueId.toUpperCase()\n\tconst techniqueName = techniquesTitles[techniqueId] || `Unknown technique`\n\n\treturn {\n\t\trequirementType: 'technique',\n\t\ttitle: `${techniqueId}: ${techniqueName}`,\n\t\tshortTitle: `technique ${techniqueId}`,\n\t\turl: getTechniqueUrl(tecuniqueId),\n\t}\n}\n\nconst technologyMap = {\n\taria: 'aria',\n\tc: 'css',\n\tf: 'failures',\n\tflash: 'flash',\n\tg: 'general',\n\th: 'html',\n\tpdf: 'pdf',\n\tscr: 'client-side-script',\n\tsl: 'silverlight',\n\tsm: 'smil',\n\tsvr: 'server-side-script',\n\tt: 'text',\n}\n\nfunction getTechniqueUrl(techniqueId) {\n\tconst baseUrl = `https://www.w3.org/WAI/WCAG21/Techniques/`\n\ttechniqueId = techniqueId.toUpperCase()\n\tconst prefix = techniqueId.replace(/[0-9]/g, '').toLowerCase()\n\tconst techniqueType = technologyMap[prefix]\n\n\tif (!techniqueType) {\n\t\treturn baseUrl\n\t}\n\tif (!techniquesTitles[techniqueId]) {\n\t\treturn `${baseUrl}#${techniqueType}`\n\t}\n\treturn `${baseUrl}${techniqueType}/${techniqueId}`\n}\n\nmodule.exports = { getWcagTechnique }\n"],"sourceRoot":""}