{"version":3,"sources":["webpack:///./src/components/acknowledgments.js","webpack:///./src/components/rule-table-of-contents.js","webpack:///./src/utils/render-fragments.js","webpack:///./src/templates/rule.js","webpack:///./src/components/list-with-heading.js"],"names":["Acknowledgments","scrollLinkId","items","contributors","preferredAcknowledgmentsOrder","otherItems","Object","keys","reduce","out","key","includes","curatedItems","Authors","Reviewers","funding","id","href","entries","map","values","length","heading","split","join","className","value","contributor","find","name","toLowerCase","target","rel","url","console","warn","defaultProps","authors","previous_authors","reviewers","RuleTableOfContents","toc","useState","isShown","setIsShown","classnames","hide","queries","large","onChange","matches","role","aria-level","dangerouslySetInnerHTML","__html","getGlossaryItemsUsedInRule","slug","glossaryUsages","forEach","push","query","location","data","rule","allRules","allGlossary","site","html","frontmatter","tableOfContents","fields","fastmatterAttributes","changelog","relativePath","fileName","ruleChangelog","JSON","parse","parsedFrontmatter","converter","showdown","Converter","siteMetadata","actRulesPackage","repository","config","repositoryUrl","curateGitUrl","ruleId","ruleTestcasesUrl","proposeChangeUrl","changelogUrl","issuesUrl","ruleFormatInputAspects","usedInRules","rulesUsages","validImplementers","implementers","filter","actMapping","mappedRuleId","consistency","title","makeHtml","rule_type","format","Date","date","accessibility_requirements","cls","headingTemplate","itemTemplate","item","to","input_aspects","aspect","aHref","input_rules","inputRuleId","atomicRule","edges","node","replace","aria-label","aria-hidden","focusable","height","viewBox","width","fillRule","d","description","usedKeys","glossaries","getGlossaryUsed","acknowledgments","acknowledgements","ListWithHeading"],"mappings":"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","file":"component---src-templates-rule-js-308bd311936082e7e31a.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * Component to render [key,value] pairs, where\n * - `key` is a string\n * - `value` is an array of items\n *\n * This is usually derived from a rule frontmatter, structure of which is as below:\n * acknowledgements:\n *   authors:\n *     - Jey Nandakumar\n *   previous_authors:\n *     - Annika Nietzio\n *\n * @param {Object} props Props\n */\nconst Acknowledgments = ({ scrollLinkId, items, contributors }) => {\n\tconst preferredAcknowledgmentsOrder = ['authors', 'previous_authors', 'reviewers', 'funding']\n\n\tconst otherItems = Object.keys(items).reduce((out, key) => {\n\t\tif (!preferredAcknowledgmentsOrder.includes(key)) {\n\t\t\tout[key] = items[key]\n\t\t}\n\t\treturn out\n\t}, {})\n\n\tconst curatedItems = {\n\t\tAuthors: items['authors'],\n\t\t'Previous Authors': items['previous_authors'],\n\t\tReviewers: items['reviewers'],\n\t\tfunding: items['funding'],\n\t\t...otherItems,\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<a id={scrollLinkId} href={`#${scrollLinkId}`}>\n\t\t\t\t<h2>Acknowledgments</h2>\n\t\t\t</a>\n\t\t\t{Object.entries(curatedItems).map(([key, values]) => {\n\t\t\t\tif (!values || !values.length) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tconst heading = key.split('_').join(' ')\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"meta\" key={key}>\n\t\t\t\t\t\t<h3 className=\"heading\">{heading}</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{values.map(value => {\n\t\t\t\t\t\t\t\t// only if acknowledgement is of type authors, get author name & url from contributors\n\t\t\t\t\t\t\t\tif (['Previous Authors', 'Authors'].includes(key)) {\n\t\t\t\t\t\t\t\t\tconst contributor = contributors.find(({ name }) => name.toLowerCase() === value.toLowerCase())\n\t\t\t\t\t\t\t\t\tif (!contributor) {\n\t\t\t\t\t\t\t\t\t\tconsole.warn(`${value}, not in contributor list.`)\n\t\t\t\t\t\t\t\t\t\treturn <li key={value}>{value}</li>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<li key={contributor.name}>\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"sc-item block\" target=\"_blank\" rel=\"noopener noreferrer\" href={contributor.url}>\n\t\t\t\t\t\t\t\t\t\t\t\t{contributor.name}\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn <li key={value}>{value}</li>\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})}\n\t\t</>\n\t)\n}\n\nAcknowledgments.propTypes = {\n\tscrollLinkId: PropTypes.string.isRequired,\n\titems: PropTypes.object.isRequired,\n\tcontributors: PropTypes.array.isRequired,\n}\n\nAcknowledgments.defaultProps = {\n\tscrollLinkId: ``,\n\titems: {\n\t\tauthors: [],\n\t\tprevious_authors: [],\n\t\treviewers: [],\n\t},\n\tcontributors: [],\n}\n\nexport default Acknowledgments\n","import React, { useState } from 'react'\nimport classnames from 'classnames'\nimport PropTypes from 'prop-types'\nimport ReactMedia from 'react-media'\n\nimport './rule-table-of-contents.scss'\n\nconst RuleTableOfContents = ({ toc }) => {\n\tconst [isShown, setIsShown] = useState(true)\n\n\treturn (\n\t\t<section className={classnames('tableOfContents', { hide: !isShown })}>\n\t\t\t<ReactMedia queries={{ large: '(min-width: 1200px)' }} onChange={matches => setIsShown(matches.large)} />\n\t\t\t<span role=\"heading\" aria-level=\"1\" className=\"heading\">\n\t\t\t\tTable of Contents\n\t\t\t</span>\n\t\t\t<div dangerouslySetInnerHTML={{ __html: toc }} />\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"#glossary-listing\">Glossary</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"#useful-links\">Useful Links</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"#implementation-metrics\">Implementations</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"#acknowledgments\">Acknowledgments</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</section>\n\t)\n}\n\nRuleTableOfContents.propTypes = {\n\ttoc: PropTypes.string.isRequired,\n}\n\nexport default RuleTableOfContents\n","import React from 'react'\nimport glossaryUsages from './../../_data/glossary-usages.json'\n\nexport const getGlossaryUsed = (slug, allGlossary) => {\n\tconst usedKeys = getGlossaryItemsUsedInRule(slug)\n\t// Always show the outcome definition:\n\tif (!usedKeys.includes('#outcome')) {\n\t\tusedKeys.push('#outcome')\n\t}\n\tconst glossaries = allGlossary.edges.filter(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { key },\n\t\t} = node\n\t\treturn usedKeys.includes(`#${key}`)\n\t})\n\tif (!glossaries.length) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<>\n\t\t\t<a id=\"glossary-listing\" href=\"#glossary-listing\">\n\t\t\t\t<h2>Glossary</h2>\n\t\t\t</a>\n\t\t\t{glossaries.map(({ node }) => {\n\t\t\t\tconst { frontmatter, html } = node\n\t\t\t\tconst { key } = frontmatter\n\t\t\t\treturn (\n\t\t\t\t\t<article key={node.id}>\n\t\t\t\t\t\t<a id={key} href={`#${key}`}>\n\t\t\t\t\t\t\t<h3>{frontmatter.title}</h3>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: html }} />\n\t\t\t\t\t</article>\n\t\t\t\t)\n\t\t\t})}\n\t\t</>\n\t)\n}\n\nexport const getGlossaryItemsUsedInRule = slug => {\n\tconst keys = []\n\tObject.keys(glossaryUsages).forEach(key => {\n\t\tglossaryUsages[key].forEach(({ slug: s }) => {\n\t\t\tif (s === slug && !keys.includes(key)) {\n\t\t\t\tkeys.push(key)\n\t\t\t}\n\t\t})\n\t})\n\treturn keys\n}\n","import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport showdown from 'showdown'\nimport { format } from 'date-fns'\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\nimport Acknowledgments from '../components/acknowledgments'\nimport AccessibilityRequirements from '../components/accessibility_requirements'\nimport ListOfImplementers from '../components/list-of-implementers'\nimport RuleTableOfContents from '../components/rule-table-of-contents'\nimport ListWithHeading from '../components/list-with-heading'\nimport rulesUsages from '../../_data/rules-usages.json'\nimport curateGitUrl from '../../utils/curate-git-url'\nimport { getGlossaryUsed } from './../utils/render-fragments'\n\nimport implementers from '../../_data/implementers.json'\n\nimport './rule.scss'\n\nexport default ({ location, data }) => {\n\tconst { rule, allRules, allGlossary, site } = data\n\tconst { html, frontmatter, tableOfContents, fields } = rule\n\tconst { slug, fastmatterAttributes, changelog, fileName } = fields\n\tconst { relativePath } = fileName\n\tconst ruleChangelog = JSON.parse(changelog)\n\tconst parsedFrontmatter = JSON.parse(fastmatterAttributes)\n\tconst converter = new showdown.Converter()\n\tconst { repository, config, contributors } = JSON.parse(site.siteMetadata.actRulesPackage)\n\tconst repositoryUrl = curateGitUrl(repository.url)\n\tconst ruleId = frontmatter.id\n\tconst ruleTestcasesUrl = `/testcases/${ruleId}/rule-${ruleId}-testcases-for-em-report-tool.json`\n\tconst proposeChangeUrl = `${repositoryUrl}/edit/develop/_rules/${relativePath}`\n\tconst changelogUrl = `/rules/${ruleId}/changelog`\n\tconst issuesUrl = `${repositoryUrl}/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+${ruleId}+`\n\tconst ruleFormatInputAspects = config['rule-format-metadata']['input-aspects']\n\tconst usedInRules = rulesUsages[ruleId]\n\tconst validImplementers = implementers.filter(({ actMapping }) => {\n\t\tconst validMappings = actMapping.filter(({ ruleId: mappedRuleId, consistency }) => {\n\t\t\treturn mappedRuleId === ruleId && ['consistent', 'partially-consistent'].includes(consistency)\n\t\t})\n\n\t\treturn validMappings.length > 0\n\t})\n\n\treturn (\n\t\t<Layout location={location}>\n\t\t\t<SEO title={`Rule | ${frontmatter.name}`} />\n\t\t\t<section className=\"page-rule\">\n\t\t\t\t{/* rule content */}\n\t\t\t\t<header>\n\t\t\t\t\t{/* title */}\n\t\t\t\t\t<h1\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: converter.makeHtml(frontmatter.name),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</header>\n\t\t\t\t{/* frontmatter */}\n\t\t\t\t<ul className=\"meta\">\n\t\t\t\t\t{frontmatter.rule_type && (\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<span className=\"heading\">Rule Type:</span>\n\t\t\t\t\t\t\t<span>{frontmatter.rule_type}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<span className=\"heading\">Rule Id:</span>\n\t\t\t\t\t\t<span> {ruleId}</span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<span className=\"heading\">Last modified:</span>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t{ruleChangelog && ruleChangelog.length ? format(new Date(ruleChangelog[0].date), 'MMM dd, yyyy') : '-'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<AccessibilityRequirements accessibility_requirements={parsedFrontmatter.accessibility_requirements} />\n\t\t\t\t\t</li>\n\t\t\t\t\t{usedInRules && usedInRules.length > 0 && (\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<ListWithHeading\n\t\t\t\t\t\t\t\tcls={`side-notes`}\n\t\t\t\t\t\t\t\theadingTemplate={() => <span className=\"heading\">Used in rules:</span>}\n\t\t\t\t\t\t\t\titemTemplate={item => (\n\t\t\t\t\t\t\t\t\t<li key={item.slug}>\n\t\t\t\t\t\t\t\t\t\t<Link to={`/${item.slug}`}>\n\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t__html: converter.makeHtml(item.name),\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\titems={usedInRules}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t\t{frontmatter.input_aspects && frontmatter.input_aspects.length && (\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<ListWithHeading\n\t\t\t\t\t\t\t\tcls={`side-notes`}\n\t\t\t\t\t\t\t\theadingTemplate={() => <span className=\"heading\">Input Aspects:</span>}\n\t\t\t\t\t\t\t\titemTemplate={aspect => {\n\t\t\t\t\t\t\t\t\tconst aHref = ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t\t\t\t\t? ruleFormatInputAspects[aspect]\n\t\t\t\t\t\t\t\t\t\t: ruleFormatInputAspects['default']\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<li key={aspect}>\n\t\t\t\t\t\t\t\t\t\t\t<a className=\"sc-item block\" href={aHref}>\n\t\t\t\t\t\t\t\t\t\t\t\t{aspect}\n\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\titems={frontmatter.input_aspects}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t\t{frontmatter.input_rules && frontmatter.input_rules.length && (\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<ListWithHeading\n\t\t\t\t\t\t\t\tcls={`side-notes`}\n\t\t\t\t\t\t\t\theadingTemplate={() => <span className=\"heading\">Input Rules:</span>}\n\t\t\t\t\t\t\t\titemTemplate={inputRuleId => {\n\t\t\t\t\t\t\t\t\tconst atomicRule = allRules.edges.find(rule => rule.node.frontmatter.id === inputRuleId)\n\t\t\t\t\t\t\t\t\tconst aHref = atomicRule.node.fields.slug.replace('rules/', '')\n\t\t\t\t\t\t\t\t\tconst name = atomicRule.node.frontmatter.name\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<li key={inputRuleId}>\n\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"sc-item block\"\n\t\t\t\t\t\t\t\t\t\t\t\thref={aHref}\n\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t__html: converter.makeHtml(name),\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t></a>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\titems={frontmatter.input_rules}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t\t<hr />\n\t\t\t\t{/* Description */}\n\t\t\t\t<h2 id=\"description\">\n\t\t\t\t\t<a href=\"#description\" aria-label=\"description permalink\" className=\"anchor before\">\n\t\t\t\t\t\t<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" viewBox=\"0 0 16 16\" width=\"16\">\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\t\t\t\t\td=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n\t\t\t\t\t\t\t></path>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</a>\n\t\t\t\t\tDescription\n\t\t\t\t</h2>\n\t\t\t\t<div\n\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t__html: converter.makeHtml(frontmatter.description),\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t{/* html content */}\n\t\t\t\t<div\n\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t__html: html,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<hr />\n\t\t\t\t{/* glossary */}\n\t\t\t\t{getGlossaryUsed(slug, allGlossary)}\n\t\t\t\t<hr />\n\t\t\t\t{/* Useful links */}\n\t\t\t\t<a href=\"#useful-links\" id=\"useful-links\">\n\t\t\t\t\t<h2>Useful Links</h2>\n\t\t\t\t</a>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href={issuesUrl}>\n\t\t\t\t\t\t\tGithub issues related to this rule\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a rel=\"noopener noreferrer\" href={changelogUrl}>\n\t\t\t\t\t\t\tChangelog\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href={proposeChangeUrl}>\n\t\t\t\t\t\t\tPropose a change to the rule\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a target=\"_blank\" rel=\"noopener noreferrer\" href={ruleTestcasesUrl}>\n\t\t\t\t\t\t\tTest case file for use in the WCAG-EM Report Tool\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t<hr />\n\t\t\t\t{/* implementations */}\n\t\t\t\t<>\n\t\t\t\t\t<a id=\"implementation-metrics\" href=\"#implementation-metrics\">\n\t\t\t\t\t\t<h2>Implementations</h2>\n\t\t\t\t\t</a>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis section is not part of the official rule. It is populated dynamically and not accounted for in the\n\t\t\t\t\t\tchange history or the last modified date. This section will not be included in the rule when it is published\n\t\t\t\t\t\ton the W3C website.\n\t\t\t\t\t</p>\n\t\t\t\t\t<ListOfImplementers implementers={validImplementers} ruleId={ruleId} />\n\t\t\t\t</>\n\t\t\t\t{/* Acknowledgments */}\n\t\t\t\t<Acknowledgments\n\t\t\t\t\tscrollLinkId={`acknowledgments`}\n\t\t\t\t\titems={parsedFrontmatter.acknowledgments || parsedFrontmatter.acknowledgements}\n\t\t\t\t\tcontributors={contributors}\n\t\t\t\t/>\n\t\t\t</section>\n\t\t\t{/* Toc */}\n\t\t\t<RuleTableOfContents toc={tableOfContents} />\n\t\t</Layout>\n\t)\n}\n\nexport const query = graphql`\n\tquery($slug: String!) {\n\t\trule: markdownRemark(fields: { slug: { eq: $slug } }) {\n\t\t\thtml\n\t\t\ttableOfContents\n\t\t\tfrontmatter {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\trule_type\n\t\t\t\tdescription\n\t\t\t\tinput_aspects\n\t\t\t\tinput_rules\n\t\t\t}\n\t\t\tfields {\n\t\t\t\tfileName {\n\t\t\t\t\trelativePath\n\t\t\t\t}\n\t\t\t\tslug\n\t\t\t\tfastmatterAttributes\n\t\t\t\tchangelog\n\t\t\t}\n\t\t}\n\t\tallRules: allMarkdownRemark(filter: { fields: { markdownType: { eq: \"rules\" } } }) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfields {\n\t\t\t\t\t\tfileName {\n\t\t\t\t\t\t\trelativePath\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tallGlossary: allMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___title], order: ASC }\n\t\t\tfilter: { fields: { markdownType: { eq: \"glossary\" } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tid\n\t\t\t\t\thtml\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tkey\n\t\t\t\t\t}\n\t\t\t\t\tfields {\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t}\n\t\t\t\t\texcerpt\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\tactRulesPackage\n\t\t\t}\n\t\t}\n\t}\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ListWithHeading = ({ cls, headingTemplate, itemTemplate, items = [] }) => {\n\treturn (\n\t\t<div className={cls}>\n\t\t\t{/* title  */}\n\t\t\t{headingTemplate()}\n\t\t\t{/* when there are no items, show a no data note  */}\n\t\t\t{(!items || !items.length) && <div className=\"note\">No Data</div>}\n\t\t\t{/* render items if they exist  */}\n\t\t\t{items.length > 0 && <ul>{items.map(item => itemTemplate(item))}</ul>}\n\t\t</div>\n\t)\n}\n\nListWithHeading.propTypes = {\n\tcls: PropTypes.string,\n\theadingTemplate: PropTypes.func.isRequired,\n\titemTemplate: PropTypes.func.isRequired,\n\titems: PropTypes.array,\n}\n\nListWithHeading.defaultProps = {\n\tcls: ``,\n\theading: ``,\n\titems: [],\n}\n\nexport default ListWithHeading\n"],"sourceRoot":""}