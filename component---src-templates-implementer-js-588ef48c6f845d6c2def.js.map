{"version":3,"sources":["webpack:///./src/components/rule-header.js","webpack:///./node_modules/core-js/modules/es7.string.pad-end.js","webpack:///./src/templates/implementer.js","webpack:///./node_modules/core-js/modules/es6.string.repeat.js","webpack:///./src/components/note.js","webpack:///./node_modules/core-js/modules/_string-pad.js","webpack:///./utils/get-hyphenated-string.js","webpack:///./node_modules/core-js/modules/es6.string.trim.js","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./node_modules/core-js/modules/es7.object.values.js","webpack:///./node_modules/core-js/modules/_string-repeat.js","webpack:///./src/components/table-testcase-findings.js","webpack:///./src/components/list-of-implementations.js","webpack:///./src/components/badge.js"],"names":["RuleHeader","ruleId","ruleName","children","converter","showdown","Converter","className","to","id","dangerouslySetInnerHTML","__html","makeHtml","$export","$pad","userAgent","WEBKIT_BUG","test","P","F","padEnd","maxLength","this","arguments","length","undefined","Implementer","location","data","implementerData","sitePage","context","JSON","parse","organisation","toolName","actMapping","description","title","completeMaps","filterByConsistency","incompleteMaps","allRules","edges","map","node","frontmatter","name","rule_type","impl","find","isIncomplete","key","data-rule-id","value","consistency","mapping","showIncomplete","body","query","items","values","filter","includes","repeat","Note","cls","classnames","toLength","defined","module","exports","that","fillString","left","S","String","stringLength","fillStr","intMaxLength","fillLen","stringFiller","call","Math","ceil","slice","givenString","lowercase","result","split","join","toLowerCase","$trim","DESCRIPTORS","getKeys","toIObject","isEnum","f","isEntries","it","O","keys","i","push","$values","toInteger","count","str","res","n","Infinity","RangeError","TableTestcaseFindings","implementations","defaultFilter","index","implementationId","Object","findings","url","testcase","expected","actual","actuals","relativeUrl","getHyphenatedString","groupFindingsOfImplementations","ListOfImplementations","getPageContent","Badge"],"mappings":"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","file":"component---src-templates-implementer-js-588ef48c6f845d6c2def.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport showdown from 'showdown'\n\nimport './rule-header.scss'\n\nconst RuleHeader = ({ ruleId, ruleName, children }) => {\n\tconst converter = new showdown.Converter()\n\n\treturn (\n\t\t<div className=\"ruleHeader\">\n\t\t\t<Link to={`/rules/${ruleId}`}>\n\t\t\t\t<h2 id={`id-${ruleId}`} dangerouslySetInnerHTML={{ __html: converter.makeHtml(ruleName) }}></h2>\n\t\t\t</Link>\n\t\t\t<div className=\"childContainer\">{children}</div>\n\t\t</div>\n\t)\n}\n\nRuleHeader.propTypes = {\n\truleId: PropTypes.string.isRequired,\n\truleName: PropTypes.string.isRequired,\n}\n\nexport default RuleHeader\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport ListOfImplementations from '../components/list-of-implementations'\nimport RuleHeader from '../components/rule-header'\nimport Badge from '../components/badge'\nimport Note from '../components/note'\n\nimport './implementer.scss'\n\nconst Implementer = ({ location, data }) => {\n\tconst { implementerData } = data.sitePage.context\n\tconst { organisation, toolName, actMapping, description } = JSON.parse(implementerData)\n\n\tconst title = `Implementation report of ${toolName} (${organisation})`\n\tconst completeMaps = filterByConsistency(actMapping, ['consistent', 'partially-consistent'])\n\tconst incompleteMaps = filterByConsistency(actMapping, ['inconsistent'])\n\n\tif (!completeMaps || !completeMaps.length) {\n\t\treturn (\n\t\t\t<Layout location={location}>\n\t\t\t\t<SEO title={title} />\n\t\t\t\t<section className=\"page-implementer\">\n\t\t\t\t\t<h1>{title}</h1>\n\t\t\t\t\t<Note\n\t\t\t\t\t\ttitle={`Insufficient implementation data`}\n\t\t\t\t\t\tbody={`There are no known implementations. This is likely because the rule has been updated and the implementation report has not yet been updated.`}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\t\t\t</Layout>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Layout location={location}>\n\t\t\t<SEO title={title} />\n\t\t\t<section className=\"page-implementer\">\n\t\t\t\t{/* title  */}\n\t\t\t\t<h1>{title}</h1>\n\t\t\t\t{/* desc  */}\n\t\t\t\t{description && <p>{description}</p>}\n\t\t\t\t{/* impl  */}\n\t\t\t\t{data.allRules.edges.map(({ node }) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tfrontmatter: { id, name, rule_type },\n\t\t\t\t\t} = node\n\n\t\t\t\t\tconst impl = completeMaps.find(({ ruleId }) => ruleId === id)\n\t\t\t\t\tconst isIncomplete = incompleteMaps.find(({ ruleId }) => ruleId === id)\n\n\t\t\t\t\tif (!impl && isIncomplete) {\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!impl) {\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n\t\t\t\t\t * show complete implementation tabulation\n\t\t\t\t\t */\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"cardItem\" key={id} data-rule-id={id}>\n\t\t\t\t\t\t\t<RuleHeader ruleId={id} ruleName={name}>\n\t\t\t\t\t\t\t\t<Badge title={`Id:`} value={id} />\n\t\t\t\t\t\t\t\t<Badge title={`Type:`} value={rule_type} />\n\t\t\t\t\t\t\t\t<Badge title={`Consistency:`} value={impl.consistency} />\n\t\t\t\t\t\t\t</RuleHeader>\n\t\t\t\t\t\t\t<ListOfImplementations mapping={[impl]} showIncomplete={false} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport default Implementer\n\nexport const query = graphql`\n\tquery($path: String) {\n\t\tsitePage(path: { eq: $path }) {\n\t\t\tcontext {\n\t\t\t\tfilename\n\t\t\t\ttitle\n\t\t\t\timplementerData\n\t\t\t}\n\t\t}\n\t\tallRules: allMarkdownRemark(\n\t\t\tsort: { fields: [frontmatter___name], order: ASC }\n\t\t\tfilter: { fields: { markdownType: { eq: \"rules\" } } }\n\t\t) {\n\t\t\ttotalCount\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfields {\n\t\t\t\t\t\tfileName {\n\t\t\t\t\t\t\trelativePath\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmarkdownType\n\t\t\t\t\t\tslug\n\t\t\t\t\t\tfastmatterAttributes\n\t\t\t\t\t}\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tid\n\t\t\t\t\t\tname\n\t\t\t\t\t\trule_type\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n\n/**\n * Filter a given set of implementations based on consistency\n * @param {Array<Object>} items array of implementations\n * @param {Array<String>} values allowed values\n * @returns {Array<Object>}\n */\nexport function filterByConsistency(items, values) {\n\treturn items.filter(({ consistency }) => {\n\t\treturn values.includes(consistency)\n\t})\n}\n","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nimport './note.scss'\n\nconst Note = ({ cls = '', title = '', body = '' }) => {\n\treturn (\n\t\t<div className={classnames('note', cls)}>\n\t\t\t<b>{title}</b>\n\t\t\t<p>{body}</p>\n\t\t</div>\n\t)\n}\n\nNote.propTypes = {\n\tcls: PropTypes.string,\n\ttitle: PropTypes.string.isRequired,\n\tbody: PropTypes.string.isRequired,\n}\n\nexport default Note\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","const getHyphenatedString = (givenString, lowercase = true) => {\n\tconst result = givenString.split(' ').join('-')\n\n\tif (!lowercase) {\n\t\treturn result\n\t}\n\n\treturn result.toLowerCase()\n}\n\nmodule.exports = getHyphenatedString\n","'use strict';\n// 21.1.3.25 String.prototype.trim()\nrequire('./_string-trim')('trim', function ($trim) {\n  return function trim() {\n    return $trim(this, 3);\n  };\n});\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport getHyphenatedString from '../../utils/get-hyphenated-string'\n\nconst TableTestcaseFindings = ({ ruleId, implementations = [], filter = defaultFilter }) => {\n\treturn (\n\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Testcase Url</th>\n\t\t\t\t\t<th>Expected</th>\n\t\t\t\t\t{implementations.map(({ implementationId }, index) => {\n\t\t\t\t\t\treturn <th key={`${implementationId}- ${index}`}>{implementationId}</th>\n\t\t\t\t\t})}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{Object.values(groupFindingsOfImplementations(ruleId, implementations, filter)).map(\n\t\t\t\t\t({ testcase, url, relativeUrl, expected, actuals }, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr key={`${url}-${index}`}>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Link to={relativeUrl}>{testcase}</Link>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>{expected}</td>\n\t\t\t\t\t\t\t\t{implementations.map(({ implementationId }, index) => {\n\t\t\t\t\t\t\t\t\treturn <td key={`${implementationId}-${url}=${index}`}>{actuals[implementationId]}</td>\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)}\n\t\t\t</tbody>\n\t\t</table>\n\t)\n}\n\nTableTestcaseFindings.propTypes = {\n\truleId: PropTypes.string.isRequired,\n\timplementations: PropTypes.array.isRequired,\n\tfilter: PropTypes.func,\n}\n\nexport default TableTestcaseFindings\n\n/**\n * Group implmentation set data per testcase\n * @param {Array<Object>} implementations implementation set\n * @param {Function} filter filter fn\n * @returns {Object}\n */\nfunction groupFindingsOfImplementations(ruleId, implementations, filter) {\n\tconst result = {}\n\n\tconst filteredImplementations = implementations.filter(filter)\n\n\tfor (const { implementationId, findings } of filteredImplementations) {\n\t\tfor (const { url, testcase, expected, actual } of findings) {\n\t\t\tif (!result[testcase]) {\n\t\t\t\tresult[testcase] = {\n\t\t\t\t\turl,\n\t\t\t\t\ttestcase,\n\t\t\t\t\trelativeUrl: `/rules/${ruleId}/#${getHyphenatedString(testcase)}`,\n\t\t\t\t\texpected,\n\t\t\t\t\tactuals: {\n\t\t\t\t\t\t[implementationId]: actual,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult[testcase] = {\n\t\t\t\t\t...result[testcase],\n\t\t\t\t\tactuals: {\n\t\t\t\t\t\t...result[testcase].actuals,\n\t\t\t\t\t\t[implementationId]: actual,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result\n}\n\n/**\n * Default filter which returns everything\n */\nfunction defaultFilter() {\n\treturn true\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TableTestcaseFindings from './table-testcase-findings'\nimport Note from './note'\n\nconst ListOfImplementations = ({ mapping = [], showIncomplete = false }) => {\n\treturn (\n\t\t<div>\n\t\t\t{mapping.map(({ ruleId = '', implementations }) => (\n\t\t\t\t<div key={ruleId}>{getPageContent(implementations, showIncomplete, ruleId)}</div>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nListOfImplementations.propTypes = {\n\tmapping: PropTypes.array.isRequired,\n\tshowIncomplete: PropTypes.bool,\n}\n\nexport default ListOfImplementations\n\n/**\n *\n * @param {Object[]} implementations implementations\n * @param {Boolean} showIncomplete should show incomplete implementations\n * @param {String} ruleId rule id\n */\nfunction getPageContent(implementations, showIncomplete, ruleId) {\n\tif (!implementations || !implementations.length) {\n\t\treturn (\n\t\t\t<Note\n\t\t\t\tcls={`invalid`}\n\t\t\t\ttitle={`No Implementations`}\n\t\t\t\tbody={`No complete implemenations are provided. Kindly submit a new or amended implementation report.`}\n\t\t\t/>\n\t\t)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{showIncomplete ? (\n\t\t\t\t<>\n\t\t\t\t\t<Note\n\t\t\t\t\t\tcls={`invalid`}\n\t\t\t\t\t\ttitle={`Incomplete Implementation`}\n\t\t\t\t\t\tbody={`Listed below are the incomplete assertions. Kindly submit an amended implementation report.`}\n\t\t\t\t\t/>\n\t\t\t\t\t<TableTestcaseFindings\n\t\t\t\t\t\truleId={ruleId}\n\t\t\t\t\t\timplementations={implementations}\n\t\t\t\t\t\tfilter={({ consistency }) => consistency === `inconsistent`}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<TableTestcaseFindings\n\t\t\t\t\truleId={ruleId}\n\t\t\t\t\timplementations={implementations}\n\t\t\t\t\tfilter={({ consistency }) => consistency !== `inconsistent`}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './badge.scss'\n\nconst Badge = ({ title, value }) => {\n  return (\n    <div className='badge'>\n      <span className='title'>{title}</span>\n      <span>{value}</span>\n    </div>\n  )\n}\n\nBadge.propTypes = {\n  title: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired\n}\n\nexport default Badge"],"sourceRoot":""}