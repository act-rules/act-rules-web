{"version":3,"sources":["webpack:///./src/components/accessibility_requirements/index.js","webpack:///./src/components/note.js","webpack:///./utils/get-hyphenated-string.js"],"names":["getMappingOutcomeSentence","mappingType","outcome","outcomeMap","satisfied","outcomeValue","OutcomeMapping","failed","passed","inapplicable","type","AccessibilityRequirementsListing","item","listType","title","learnMore","conformanceTo","url","mapping","key","className","href","target","rel","BasicListing","accessibilityDocument","aria11","baseURL","TechniqueListing","techniqueId","toUpperCase","aria","c","f","flash","g","h","pdf","scr","sl","sm","svr","t","replace","techniquesTitles","WcagListing","scUrls","num","handle","wcagType","level","AccessibilityRequirements","accessibility_requirements","Object","entries","map","req","toLocaleLowerCase","split","accessibilityItem","Note","cls","body","classnames","module","exports","givenString","lowercase","result","join","toLowerCase"],"mappings":"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","file":"d874871c30ab579c69a585def3286e922215136b-6971feef4840729a2147.js","sourcesContent":["import techniquesTitles from '../../../_data/techniques-titles'\nimport scUrls from '../../../_data/sc-urls'\nimport React from 'react'\n\n/**\n * Conjugate outcome mapping\n * @param {String} mappingType mapping type eg: technique, requirement, success criterion\n * @param {String} outcome given string from accessibility requirement authored in frontmatte of the rule\n * @returns {String}\n */\nconst getMappingOutcomeSentence = (mappingType, outcome) => {\n\tconst outcomeMap = {\n\t\tsatisfied: 'is satisfied',\n\t\t'not satisfied': 'is not satisfied',\n\t\t'further testing needed': 'needs further testing',\n\t}\n\n\tlet outcomeValue = ``\n\tif (outcomeMap[outcome]) {\n\t\toutcomeValue = outcomeMap[outcome]\n\t}\n\n\treturn `${mappingType} ${outcomeValue}`\n}\n\nfunction OutcomeMapping({\n\tfailed = 'not satisfied',\n\tpassed = 'further testing is needed',\n\tinapplicable = 'further testing is needed',\n\ttype = 'success criterion',\n}) {\n\treturn (\n\t\t<li>\n\t\t\tOutcome mapping:\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\tAny <code>failed</code> outcomes: {getMappingOutcomeSentence(type, failed)}.\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\tAll <code>passed</code> outcomes: {getMappingOutcomeSentence(type, passed)}.\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\tAn <code>inapplicable</code> outcome: {getMappingOutcomeSentence(type, inapplicable)}.\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</li>\n\t)\n}\n\nfunction AccessibilityRequirementsListing({\n\titem,\n\tlistType,\n\ttitle,\n\tlearnMore,\n\tconformanceTo,\n\turl,\n\tmapping,\n\tmappingType,\n}) {\n\tif (listType === 'text') {\n\t\treturn (\n\t\t\t<li key={item}>\n\t\t\t\t<a className=\"sc-item\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t{title}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t)\n\t}\n\n\treturn (\n\t\t<li>\n\t\t\t<details>\n\t\t\t\t<summary>{title}</summary>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a className=\"sc-item\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\tLearn More about {learnMore}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>{conformanceTo}</li>\n\t\t\t\t\t<OutcomeMapping\n\t\t\t\t\t\ttype={mappingType}\n\t\t\t\t\t\tfailed={mapping.failed}\n\t\t\t\t\t\tpassed={mapping.passed}\n\t\t\t\t\t\tinapplicable={mapping.inapplicable}\n\t\t\t\t\t/>\n\t\t\t\t</ul>\n\t\t\t</details>\n\t\t</li>\n\t)\n}\n\n// For documents where we provide the title, and where the item is an URL anchor\nfunction BasicListing({ accessibilityDocument, item, mapping, listType }) {\n\tconst { conformanceTo, baseURL } = {\n\t\taria11: {\n\t\t\tconformanceTo: (\n\t\t\t\t<>\n\t\t\t\t\t<strong>Required for conformance</strong> to WAI-ARIA 1.1 specifications.\n\t\t\t\t</>\n\t\t\t),\n\t\t\tbaseURL: 'https://www.w3.org/TR/wai-aria-1.1/#',\n\t\t},\n\t\t'using-aria': {\n\t\t\tconformanceTo: 'Not required to conformance to any W3C accessibility recommendation.',\n\t\t\tbaseURL: 'https://www.w3.org/TR/using-aria/#',\n\t\t},\n\t\t'wcag-text': {\n\t\t\tconformanceTo: (\n\t\t\t\t<>\n\t\t\t\t\t<strong>Required for conformance</strong> to WCAG 2.0 and above on level A and above.\n\t\t\t\t</>\n\t\t\t),\n\t\t\tbaseURL: 'https://www.w3.org/TR/WCAG21/#',\n\t\t},\n\t}[accessibilityDocument]\n\n\treturn (\n\t\t<AccessibilityRequirementsListing\n\t\t\titem={item}\n\t\t\tlistType={listType}\n\t\t\ttitle={mapping.title}\n\t\t\tlearnMore={mapping.title}\n\t\t\tconformanceTo={conformanceTo}\n\t\t\turl={`${baseURL}${item}`}\n\t\t\tmapping={mapping}\n\t\t\tmappingType={`requirement`}\n\t\t/>\n\t)\n}\n\n// For WCAG techniques. Title is grabbed from data fetched during build. URL is handcrafted.\nfunction TechniqueListing({ item, mapping, listType }) {\n\tconst techniqueId = item.toUpperCase()\n\tconst techniqueKind = {\n\t\taria: 'aria',\n\t\tc: 'css',\n\t\tf: 'failures',\n\t\tflash: 'flash',\n\t\tg: 'general',\n\t\th: 'html',\n\t\tpdf: 'pdf',\n\t\tscr: 'client-side-script',\n\t\tsl: 'silverlight',\n\t\tsm: 'smil',\n\t\tsvr: 'server-side-script',\n\t\tt: 'text',\n\t}[item.replace(/[0-9]/g, '')]\n\n\tconst url = `https://www.w3.org/WAI/WCAG21/Techniques/${techniqueKind}/${techniqueId}`\n\tconst title = `${techniqueId}: ${techniquesTitles[techniqueId]}`\n\n\treturn (\n\t\t<AccessibilityRequirementsListing\n\t\t\titem={item}\n\t\t\tlistType={listType}\n\t\t\ttitle={title}\n\t\t\tlearnMore={title}\n\t\t\tconformanceTo=\"Not required to conformance to any W3C accessibility recommendation.\"\n\t\t\turl={url}\n\t\t\tmapping={mapping}\n\t\t\tmappingType={`technique`}\n\t\t/>\n\t)\n}\n\n// For WCAG SC. Title, URL and more is grabbed from data fetched during build.\nfunction WcagListing({ item, mapping, listType }) {\n\tconst { num, url, handle, wcagType, level } = scUrls[item]\n\n\treturn (\n\t\t<AccessibilityRequirementsListing\n\t\t\titem={item}\n\t\t\tlistType={listType}\n\t\t\ttitle={`${num} ${handle} (Level: ${level})`}\n\t\t\tlearnMore={`${num} (${handle})`}\n\t\t\tconformanceTo={\n\t\t\t\t<>\n\t\t\t\t\t<strong>Required for conformance</strong> to WCAG {wcagType} and above on level {level} and above.\n\t\t\t\t</>\n\t\t\t}\n\t\t\turl={url}\n\t\t\tmapping={mapping}\n\t\t\tmappingType={`success criterion`}\n\t\t/>\n\t)\n}\n\nexport default function AccessibilityRequirements({ accessibility_requirements, type = 'details' }) {\n\tif (!accessibility_requirements) {\n\t\treturn (\n\t\t\t<div className=\"meta\">\n\t\t\t\t<span className=\"heading\">Accessibility Requirements Mapping:</span>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>This rule is not required for conformance.</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"meta\">\n\t\t\t<span className=\"heading\">Accessibility Requirements Mapping:</span>\n\t\t\t<ul>\n\t\t\t\t{Object.entries(accessibility_requirements).map(([req, mapping]) => {\n\t\t\t\t\tconst [accessibilityDocument, accessibilityItem] = req.toLocaleLowerCase().split(':')\n\n\t\t\t\t\tswitch (accessibilityDocument) {\n\t\t\t\t\t\tcase 'aria11':\n\t\t\t\t\t\tcase 'using-aria':\n\t\t\t\t\t\tcase 'wcag-text':\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<BasicListing\n\t\t\t\t\t\t\t\t\tkey={accessibilityItem}\n\t\t\t\t\t\t\t\t\taccessibilityDocument={accessibilityDocument}\n\t\t\t\t\t\t\t\t\titem={accessibilityItem}\n\t\t\t\t\t\t\t\t\tmapping={mapping}\n\t\t\t\t\t\t\t\t\tlistType={type}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\tcase 'wcag20':\n\t\t\t\t\t\tcase 'wcag21':\n\t\t\t\t\t\t\treturn <WcagListing key={accessibilityItem} item={accessibilityItem} mapping={mapping} listType={type} />\n\t\t\t\t\t\tcase 'wcag-technique':\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<TechniqueListing key={accessibilityItem} item={accessibilityItem} mapping={mapping} listType={type} />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn <>Accessibility Requirements have no or unknown mapping.</>\n\t\t\t\t\t}\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nimport './note.scss'\n\nconst Note = ({ cls = '', title = '', body = '' }) => {\n\treturn (\n\t\t<div className={classnames('note', cls)}>\n\t\t\t<b>{title}</b>\n\t\t\t<p>{body}</p>\n\t\t</div>\n\t)\n}\n\nNote.propTypes = {\n\tcls: PropTypes.string,\n\ttitle: PropTypes.string.isRequired,\n\tbody: PropTypes.string.isRequired,\n}\n\nexport default Note\n","const getHyphenatedString = (givenString, lowercase = true) => {\n\tconst result = givenString.split(' ').join('-')\n\n\tif (!lowercase) {\n\t\treturn result\n\t}\n\n\treturn result.toLowerCase()\n}\n\nmodule.exports = getHyphenatedString\n"],"sourceRoot":""}